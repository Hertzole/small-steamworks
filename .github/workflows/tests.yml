name: Unity Tests
on:
  push:
    branches: # Only run jobs if files changed on this branch
      - master
    paths: # Only run jobs if files changed at these paths
      - '.github/workflows/tests.yml'
      - 'Assets/**'
      - 'Packages/**'

jobs:
  sonarscan:
    name: SonarScan
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2021.3.26f1-base-1.1.2
    steps:
      - name: Install Node
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | bash -
          apt-get install -y nodejs
      - name: Activate Unity
        continue-on-error: true
        env:
          LICENSE_BASE64: ${{ secrets.UNITY_LICENSE }}
        run: |
          echo $LICENSE_BASE64 | base64 --decode > License.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile License.ulf -quit 

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache library
        uses: actions/cache@v3.0.11
        with:
          path: Library
          key: LibraryFolder
          restore-keys: |
            LibraryFolder

      - name: Install .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 6.x

      - name: Install scanner
        run: |
          dotnet tool install dotnet-sonarscanner --tool-path . --version 5.4.0
          apt update
          apt install -y openjdk-11-jre-headless

      - name: Generate Solution
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName small-steamworks -projectPath . -executeMethod GitTools.Solution.Sync -quit

      - name: SonarQube analysis
        env:
          FrameworkPathOverride: /opt/unity/Editor/Data/MonoBleedingEdge/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./dotnet-sonarscanner begin \
           /o:"hertzole" \
           /k:"small-steamworks" \
           /d:sonar.host.url=https://sonarcloud.io \
           /d:sonar.verbose=false \
           /d:sonar.login=$SONAR_TOKEN
          dotnet build small-steamworks.sln
          ./dotnet-sonarscanner end /d:sonar.login=$SONAR_TOKEN
